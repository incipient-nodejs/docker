name: TudKabir Backend Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        run: |
          echo "${{ secrets.ENV_FILE }}" > env_temp_file

          docker buildx build \
            --tag ghcr.io/${{ github.repository_owner }}/tudkabir:latest \
            --tag ghcr.io/${{ github.repository_owner }}/tudkabir:${{ github.sha }} \
            --push . \
            --secret id=env_file,src=env_temp_file
          rm env_temp_file

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            mkdir -p $HOME/tudkabir
            cd $HOME/tudkabir

            echo "📝 Writing .env file..."
            echo "${{ secrets.ENV_FILE }}" > .env

            echo "🔐 Logging in to GHCR..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "▶ Pulling latest image..."
            docker pull ghcr.io/${{ github.repository_owner }}/tudkabir:latest

            echo "🛑 Removing any old temp container..."
            docker rm -f tubkair_temp || true

            echo "▶ Starting new container on port 9001..."
            docker run -d \
              --name tubkair_temp \
              --env-file .env \
              --restart unless-stopped \
              -p 9001:9000 \
              ghcr.io/${{ github.repository_owner }}/tudkabir:latest

            echo "▶ Waiting for container to become healthy..."
            for i in {1..10}; do
              if curl -s http://localhost:9001/api/healthz | grep -q "ok"; then
                echo "✅ Health check passed"
                break
              fi
              echo "⏳ Waiting for health check... ($i/10)"
              sleep 2
              if [ "$i" -eq 10 ]; then
                echo "❌ New container failed health check. Logging container output:"
                docker logs tubkair_temp || true
                docker stop tubkair_temp && docker rm tubkair_temp
                exit 1
              fi
            done

            echo "🛑 Stopping old container (if exists)..."
            docker stop tubkair_app || true
            docker rm tubkair_app || true

            echo "🚀 Promoting new container..."
            docker rename tubkair_temp tubkair_app

            echo "🧹 Pruning unused images and volumes..."
            docker system prune -a -f --volumes

            echo "✅ Zero downtime deployment complete!"

