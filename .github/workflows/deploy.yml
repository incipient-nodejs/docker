name: TudKabir Backend Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --tag ghcr.io/${{ github.repository_owner }}/tudkabir:latest \
            --tag ghcr.io/${{ github.repository_owner }}/tudkabir:${{ github.sha }} \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_SSH_HOST }}
          username: ${{ secrets.DO_SSH_USER }}
          password: ${{ secrets.DO_SSH_PASSWORD }}
          script: |
            set -e

            mkdir -p $HOME/htdocs/api.tudkabir.com
            cd $HOME/htdocs/api.tudkabir.com

            echo "🔐 Logging in to GHCR..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "🔗 Creating shared Docker network (if not exists)..."
            docker network inspect tudkabir-net >/dev/null 2>&1 || docker network create tudkabir-net

            echo "🧠 Ensuring Redis container is running..."
            if ! docker ps --format '{{.Names}}' | grep -q '^tudkabir_redis$'; then
              if docker ps -a --format '{{.Names}}' | grep -q '^tudkabir_redis$'; then
                echo "⏳ Starting existing Redis container..."
                docker start tudkabir_redis
              else
                echo "🚀 Creating new Redis container..."
                docker volume inspect tudkabir_redis_data >/dev/null 2>&1 || docker volume create tudkabir_redis_data
                docker run -d \
                  --name tudkabir_redis \
                  --network tudkabir-net \
                  --restart unless-stopped \
                  -v tudkabir_redis_data:/data \
                  redis:alpine
              fi
            else
              echo "✅ Redis container is already running."
            fi

            echo "▶ Pulling latest Laravel app image..."
            docker pull ghcr.io/${{ github.repository_owner }}/tudkabir:latest

            echo "🌱 Setting dynamic port for green container..."
            GREEN_PORT=9001  # Can be dynamically generated if needed

            echo "🟢 Starting green container on port $GREEN_PORT..."
            docker rm -f tubkair_green || true
            docker run -d \
              --name tubkair_green \
              --env-file .env \
              --network tudkabir-net \
              -p ${GREEN_PORT}:9000 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/tudkabir:latest

            echo "🔍 Health check for green container..."
            for i in {1..30}; do
              if curl -s http://localhost:$GREEN_PORT/api/healthz | grep -q "ok"; then
                echo "✅ Green container healthy"
                break
              fi
              echo "⏳ Waiting for health check... ($i/30)"
              sleep 1
              if [ "$i" -eq 30 ]; then
                echo "❌ Green container failed health check"
                docker logs tubkair_green || true
                docker rm -f tubkair_green
                exit 1
              fi
            done

            echo "🔁 Swapping green -> blue (port 9000)..."
            docker stop tubkair_blue || true
            docker rm -f tubkair_blue || true

            docker stop tubkair_green
            docker rename tubkair_green tubkair_blue

            docker run -d \
              --name tubkair_blue \
              --env-file .env \
              --network tudkabir-net \
              -p 9000:9000 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/tudkabir:latest

            echo "🧹 Cleaning up..."
            docker system prune -a -f --volumes

            echo "✅ Deployment successful (Blue container running on port 9000)"
